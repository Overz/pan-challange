debug: ${DEBUG:false}
mode: "template"
version: '@project.version@'

# jdbc:sqlite::memory:
# jdbc:postgresql://localhost:5432/starwars
# jdbc:h2:mem:swdb

server:
  port: "${APP_PORT:3000}"
  servlet:
    encoding:
      charset: "UTF-8"
    context-path: ""
  error:
    include-stacktrace: "never"

spring:
  application:
    name: '@project.artifactId@'
  gson:
    pretty-printing: "true"
    serialize-nulls: "true"
    exclude-fields-without-expose-annotation: "true"
  mvc:
    static-path-pattern: "/${spring.application.name}/static/**"
  datasource:
    driver-class-name: "${custom.database.driver.used}"
    url: "${DB_URL}"
    username: "${DB_USERNAME}"
    password: "${DB_PASSWORD}"
  jpa:
    database-platform: "${custom.database.dialect.used}"
    generate-ddl: false
    show-sql: ${debug}
    defer-datasource-initialization: true

  h2:
    console:
      enabled: ${debug}
  flyway:
    enabled: true
    url: "${DB_URL}"
    user: "${DB_USERNAME}"
    password: "${DB_PASSWORD}"
    baseline-on-migrate: true
    validate-on-migrate: true
    driver-class-name: "${custom.database.driver.used}"
    sql-migration-separator: "-"
    sql-migration-prefix: "0000"
    locations: "classpath:migrations"
    table: "migrations"

logging:
  charset:
    console: "UTF-8"
    file: "UTF-8"
  file:
    name: "${logging.file.path}/${mode}-${currentTimeMillis}.log"
    path: "${APP_LOGS:./tmp/logs/${spring.application.name}/${version}}"
  logback:
    rollingpolicy:
      clean-history-on-start: "${debug}"
      max-file-size: "20MB"
  level:
    web: debug

springdoc:
  api-docs:
    path: "/${spring.application.name}/docs/specs"
    version: OPENAPI_3_0
    enabled: true

custom:
  cors:
    methods: "POST,GET,PUT,OPTIONS,HEAD"
    origins: '*'
    credentials: true
  rest:
    connection:
      request-timeout: 10000
      response-timeout: 10000
  database:
    dialect:
      used: "${custom.database.dialect.h2}"
      postgres: "org.hibernate.dialect.PostgresPlusDialect"
      sqlite: "org.sqlite.JDBC"
      h2: "org.hibernate.dialect.H2Dialect"
    driver:
      used: "${custom.database.driver.h2}"
      postgres: "org.postgresql.Driver"
      sqlite: "org.hibernate.dialect.??"
      h2: "org.h2.Driver"
